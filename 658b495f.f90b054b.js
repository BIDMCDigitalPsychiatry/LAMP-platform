(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{213:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),c=(n(0),n(414)),i={},o={unversionedId:"todo/Data Science with LAMP/Data Types/Sensor/Screen e594985c06a24af689d1d654afd8ba2c",id:"todo/Data Science with LAMP/Data Types/Sensor/Screen e594985c06a24af689d1d654afd8ba2c",isDocsHomePage:!1,title:"Screen e594985c06a24af689d1d654afd8ba2c",description:"Screen",source:"@site/docs/todo/Data Science with LAMP/Data Types/Sensor/Screen e594985c06a24af689d1d654afd8ba2c.md",slug:"/todo/Data Science with LAMP/Data Types/Sensor/Screen e594985c06a24af689d1d654afd8ba2c",permalink:"/LAMP-platform/todo/Data Science with LAMP/Data Types/Sensor/Screen e594985c06a24af689d1d654afd8ba2c",editUrl:"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/todo/Data Science with LAMP/Data Types/Sensor/Screen e594985c06a24af689d1d654afd8ba2c.md",version:"current",lastUpdatedBy:"Aditya Vaidyam",lastUpdatedAt:1615981212},l=[{value:"Description",id:"description",children:[]},{value:"Settings",id:"settings",children:[]},{value:"Data",id:"data",children:[]},{value:"Example",id:"example",children:[]}],s={toc:l};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"screen"},"Screen"),Object(c.b)("p",null,"SensorSpec: lamp.screen_state"),Object(c.b)("h3",{id:"description"},"Description"),Object(c.b)("p",null,"The screen state sensor records when the screen was turned on or off, when the device was locked or unlocked, and changes in battery level from charging or discharging the device. "),Object(c.b)("p",null,"This sensor ",Object(c.b)("strong",{parentName:"p"},"DOES NOT")," record the amount of time spent within specific apps on the device or how many notifications were received."),Object(c.b)("h3",{id:"settings"},"Settings"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"None")),Object(c.b)("h3",{id:"data"},"Data"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"screen_state: number"),": (units: N/A) the current device screen and lock state.",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"0"),": screen_off; the screen was turned off, either by the user or by a notification."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"1"),": screen_on; the screen was turned on, either by the user or by screen timeout."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"2"),": device_locked; the device was locked, either by the user or by device timeout."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"3"),": device_unlocked; the device was unlocked by the user."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"4"),": battery_charging; the device was plugged in to charge by the user."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"5"),": battery_unplugged; the device was unplugged from the charger by the user."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"battery_level: number"),": (units: percentage) the current battery level of the device.")),Object(c.b)("h3",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-markdown"},'# **LAMP.SensorEvent.all_by_participant("U1234567890", "lamp.screen_state")**\n{\n  "timestamp": 1234567890,\n  "sensor": "lamp.screen_state",\n  "data": {\n    "screen_state": 2,\n    "battery_level": 0.68\n  }\n}\n')))}d.isMDXComponent=!0},414:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=d(n),u=r,m=b["".concat(i,".").concat(u)]||b[u]||p[u]||c;return n?a.a.createElement(m,o(o({ref:t},s),{},{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,i=new Array(c);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<c;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);