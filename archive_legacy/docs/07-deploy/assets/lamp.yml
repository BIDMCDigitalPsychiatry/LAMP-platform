    version: '3.7'
    services:
      server:
        image: ghcr.io/bidmcdigitalpsychiatry/lamp-server:2022
        healthcheck:
          test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
        environment:
          HTTPS: 'off'
          ROOT_KEY: '32_BIT_ENCRYPTION_KEY_HERE'
          DB: 'mongodb://admin:DB_PASSSWORD_HERE@database:27017/'
          PUSH_API_GATEWAY: 'https://app-gateway.lamp.digital/'
          PUSH_API_KEY: 'YOUR_PUSH_KEY_HERE'
          DASHBOARD_URL: 'dashboard.lamp.digital'
          REDIS_HOST: 'redis://cache:6379/0'
          NATS_SERVER: 'message_queue:4222'
        networks:
          - default
          - public
        logging:
          options:
            max-size: "10m"
            max-file: "3"
        deploy:
          mode: replicated
          update_config:
            order: start-first
            failure_action: rollback
          labels:
            traefik.enable: 'true'
            traefik.docker.network: 'public'
            traefik.http.routers.lamp_server.entryPoints: 'websecure'
            traefik.http.routers.lamp_server.rule: 'Host(`api.example.com`)'
            traefik.http.routers.lamp_server.tls.certresolver: 'default'
            traefik.http.services.lamp_server.loadbalancer.server.port: 3000
          placement:
            constraints:
              - node.role == manager
      database:
        image: mongo:6.0.4
        environment:
          MONGO_INITDB_ROOT_USERNAME: 'admin'
          MONGO_INITDB_ROOT_PASSWORD: 'DB_PASSWORD_HERE'
        volumes:
          - /data/db:/data/db
        networks:
          - public
        deploy:
          mode: replicated
          update_config:
            order: stop-first
            failure_action: rollback
          placement:
            constraints:
              - node.role == manager
      cache:
        image: redis:6.0.8-alpine
        healthcheck:
          test: redis-cli ping
        deploy:
          mode: replicated
          update_config:
            order: stop-first
            failure_action: rollback
          placement:
            constraints:
              - node.role == manager
      message_queue:
        image: nats:2.1.9-alpine3.12
        healthcheck:
          test: wget --no-verbose --tries=1 --spider http://localhost:8222/varz || exit 1
        deploy:
          mode: replicated
          update_config:
            order: start-first
            failure_action: rollback
          placement:
            constraints:
              - node.role == manager
    networks:
      public:
        external: true
