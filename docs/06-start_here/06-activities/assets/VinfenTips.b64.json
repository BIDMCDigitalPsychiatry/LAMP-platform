[
  {
    "id": "dv7xnc83tf02e8zpynnx",
    "spec": "lamp.tips",
    "name": "Vinfen Tips",
    "settings": [
      {
        "title": "Affirmations",
        "text": "Affirmations are positive words that you say to yourself to achieve success. Affirmations are used to remind yourself of your strengths and your worth. Affirmations are something that you want to be true. They are spoken as statements of fact which help you to believe in them. Affirmations can help when you are feeling down about yourself, nervous, or even when you are excited about the day ahead.\n\n### Steps\n\n1. Choose at least one affirmation such as:\n\t- I accept myself for who I am.\n\t- I have a lot to be proud of.\n\t- I have the power to make my dreams come true.\n\t- I am resilient.\n\t- I have people who love, support, and respect me.\n\t- I am a loving and caring person.\n\t- I control my own happiness.\n\t- I believe in myself.\n\t- I make a difference.\n2. Practice saying your affirmation at least once a day or more by slowly repeating the affirmation numerous times. Let it sink into your mind and body.\n3. Hang your affirmation in your room, store an image of it on your phone, or keep a copy in your wallet.\n\n### Practice\n\nPractice Affirmations once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Affirmations in harder situations when you really need it. The more you practice, the more Affirmations become second nature and you can use them anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Alternative Explanations",
        "text": "Alternative Explanations (Alt-Ex) is a skill that can help you to think about situations in a different way. This will help you control your feelings and reactions to that situation. Alternative Explanations can help you to feel less stressed and anxious. Alt-Ex can also help you to clear your head a bit so you can think straight.\n\nHere is an example:\n\nYou leave a message for your brother and he doesn\u2019t return your call.\n- Do you jump to conclusions and **think** \u201Che\u2019s ignoring me?\u201D\n- Do you **feel** upset and angry?\n- Do you **act** on these thoughts and feelings? \u201CI\u2019m going to ignore\nhim.\u201D\n\nFor many situations, you don\u2019t know what happened but before you \u201Cjump to conclusions,\u201D slow down and think about other things that could be going on. Be creative!\n\nHere is the example again:\n\nYou leave a message for your brother and he doesn\u2019t return your call.\n\nPossible explanations could be:\n- My brother lost his phone and never received my message.\n- My brother is at the dentist and can\u2019t talk right now.\n\n### Steps\n\nThink of a situation in your life that causes you to \u201Cjump to conclusions.\u201D\n\nIdentify one or more possible explanations to the situation. Be creative.\n\n### Practice\n\nPractice Alt-Ex once a day or more at times when you are feeling well and not stressed. This will help you learn the skill better so you will be able to use Alt-Ex in harder situations when you really need it. The more you practice, the more Alt-Ex becomes second nature and you can use it anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Belly Breathing",
        "text": "Often when you are anxious, the result in your body is that your breathing rate increases, and you take shorter, shallower breaths. When you are relaxed, the opposite happens. By slowing down the breath, you trick your brain into thinking you are relaxed, and all the relaxation neurochemicals are released.\n\nBelly Breathing is a technique you can use to relax and become more aware of your breathing. Belly Breathing can help you to calm and center yourself when you are feeling overwhelmed or stressed.\n\n### Steps\n\n1. Sit comfortably and straighten your back.\n2. Place your hands on your belly and slow your breathing down.\n3. Inhale fully and gently breathing through your nose.\n4. Keep your breaths smooth and steady while feeling your belly and chest expanding.\n5. Exhale fully and slowly blowing all the air back out of your lungs.\n6. Let your belly sink down flat.\n\n### Practice\n\nIn the beginning, try to practice Belly Breathing for five minutes at least once a day.\n\nLetting your breath fill your body will give you the calmness you need to face social situations, a job interview, or even the world. It\u2019s hard at first but take your time and try again.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Breathing Retraining",
        "text": "Breathing Retraining is a skill that helps you to slow down your breathing so you can clear your head a bit, think straight, and feel more relaxed. Breathing Retraining can be used anytime and anywhere so you feel less stressed, worried, or upset.\n\n### Steps\n\n1. Choose a word that you find relaxing, such as \u201Ccalm\u201D or \u201Cpeace\u201D or another word of your choice.\n2. Take a normal breath (not a deep one) in through your nose and exhale slowly through your mouth.\n3. While you exhale, say the relaxing word you have chosen very slowly: \u201Ccalm\u201D or \u201Cpeace.\u201D\n4. Pause briefly before you take your next breath. You can count to four before taking in each new breath.\n5. Practice this exercise several times a day, taking 10 to 15 breaths at each practice.\n\n### Practice\n\nPractice Breathing Retraining once a day or more at times when you are feeling well and not stressed. This will help you learn the skill better so you will be able to use Breathing Retraining in harder situations when you really need it. The more you practice, the more Breathing Retraining becomes second nature and you can use it anytime, with ease.\n\n_Reference: [Jennifer Gottlieb PH. D](https:\/\/www.udemy.com\/breathing-retraining\/)_\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Compassion",
        "text": "Compassion is the ability to feel the emotions of another person. When you are compassionate, you can take the perspective of another and you have the desire to help. Being compassionate makes you feel good and can help you to handle stress. Using strategies to be compassionate can improve your health, well-being, and personal relationships.\n\nCompassion starts with appreciation,\n[gratitude](http:\/\/www.powerofpositivity.com\/11-habits-of-happy-people\/), and self-love. Some compassion strategies you can practice include:\n- Give back or volunteer for a greater purpose\n- Model kindness to others. Practice at least one small act of kindness every day to make someone\u2019s life better (i.e. write a positive note, give a compliment, offer to help, say kind words, hold the door)\n- When you wake up or go to bed, write down at least one thing that you are grateful for, that you [appreciate about your life](https:\/\/www.powerofpositivity.com\/10-tips-on-how-to-appreciate-life\/), and what you\u2019ve been given.\n- Think about someone you care about (i.e. a partner, friend, parent, or even a beloved animal). Focus on them and direct your attention towards them with three basic feelings and thoughts: may you be well, may you be happy, and may you be free of suffering.\n- Choose a compassionate phrase such as \u201CBe kind whenever possible. It is always possible\u201D (Dalai Lama). Practice saying your compassionate phrase as many times as possible each day.\n- Think of a time when someone was kind to you. Recall how it felt to receive that kindness including the things this person said, the feeling of the emotion in the person, and the experience.\n\n### Steps\n\n1. Choose one Compassion Strategy.\n2. Practice your Compassion Strategy every day.\n3. Try different Compassion Strategies to see which one works for you.\n\n### Practice\n\nPractice Compassion Strategies every day. This will help you make Compassion Strategies a part of your everyday routine. If a daily practice is made of showing kindness, it will eventually become something that is done without much thought and effort.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Coping Strategies",
        "text": "Life is persistent in teaching you lessons. Life is like school for the soul; it will keep presenting you with the same stressful problems until you finally learn what you need to learn. When problems show up repeatedly, don\u2019t take it personally, just know that there is more for you to learn. Developing Coping Strategies can help you to manage problems and cope with stress. Examples of strategies for coping and stress relief include:\n\n- **Get enough sleep.** If possible, try to go to bed and get up at the same time. Remember that alcohol and caffeine add to sleep problems.\n- **Reduce your caffeine and sugar.** Eat meals or snacks throughout the day. Hunger and low blood sugar can increase stress and negative emotions.\n- **Increase your fun.** Every day do something you really enjoy. Try to see the humor in situations and people. Laughter is a great stress reliever.\n- **Take a short media fast.** Turn off the phone, the TV, and the computer occasionally.\n- **Breathe.** When stressed, most people take short, shallow breaths. This reinforces anxiety. Do the opposite and take some long, deep breaths whenever you remember to during the day.\n- **Spend some time out in nature.** Relax by taking a walk outside or sitting in the sun. Sit next to a tree or pond and look at the sky or the water.\n- **Get moving**. Research has proven that exercise is a better anti-depressant than medications for mild to moderate depression.\n- **Write your thoughts and feelings down.** Writing can help you clarify things and can give you a renewed perspective.\n- **Turn to spirituality for comfort.** Attend a service, pray, talk to God, or ask for help or grace. Consider taking time to meditate, relax, or practice mindfulness.\n\n### Steps\n\n1. Choose one Coping Strategy at a time.\n2. Practice your Coping Strategy at least once a day or as often as possible.\n3. Try different Coping Strategies to see which one works best.\n\n### Practice\n\nPractice your Coping Strategy at least once a day when you are feeling well and not distressed. This will help you make Coping Strategies a part of your everyday routine. The more you practice, the more Coping Strategies become second nature and you can use them anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Distraction Techniques",
        "text": "Distraction Techniques are strategies used to take your mind off distressing thoughts and overwhelming feelings. Distraction Techniques can provide a break from intense emotions by focusing your mind on something else. Distraction Techniques are a way to pass the time and to provide structure.\n\nRemember, Distraction Techniques are a short term or \u201Cin the moment\u201D strategy to get you through a difficult period. Distraction Techniques should not be used for the long-term to avoid problems and emotions.\n\nExamples of Distraction Techniques include:\n- Flick an elastic band around your wrist\n- Flash cards with positive messages\n- Squeeze a rubber ball very hard\n- Talk or go out with a friend\n- Take a bath or shower\n- Exercise or yoga\n- Hold ice in your hand\n- Read or write\n- Clean your room or the house\n- Listen to music\n\n### Steps\n\n1. Choose one Distraction Technique.\n2. Practice your Distraction Technique every day.\n3. Try different Distraction Techniques to see which one works best for you.\n\n### Practice\n\nPractice Distraction Techniques once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Distractions Techniques in harder situations when you really need it. The more you practice, the more using your Distraction Technique becomes second nature and you can use it anytime, with ease.\n\n_Reference: [understandingcbt.com](www.understandingcbt.com)_\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Grounding",
        "text": "Grounding is an in the moment strategy used to \u201Canchor\u201D you to the present and improve mental focus. When you are overwhelmed, grounding is one way to gain a sense of control and safety. Grounding puts healthy distance between you and negative feelings. It can be a phrase you say, an action you do, or something you visualize in your mind. Examples include:\n\n- Grounding Saying\n\t- Count to 10 or say the alphabet, very s\u2026l\u2026o\u2026w\u2026l\u2026y.\n\t- Say a safety statement. \u201CMy name is \\_\\_\\_\\_\\_\\_; I am safe right now. I am in the present, not in the past.\u201D\n\t- Read something, saying each word to yourself slowly.\n\t- Say kind statements as if you were speaking to someone else, \u201Cyou are a good person going through a hard time. You\u2019ll get through this.\u201D\n\t- Say a coping statement: \u201CI can handle this.\u201D \u201CThis feeling is temporary.\u201D\n- Grounding Action\n\t- Stretch such as roll your head around or extend your fingers.\n\t- Touch various objects around you like a pen, keys, your clothing, or the wall.\n\t- Carry a grounding object in your pocket, which you can touch whenever you feel triggered.\n\t- Listen to soft and slow music.\n\t- Focus on your breathing, notice each inhale and exhale.\n- Grounding Thoughts\n\t- Think of favorites like color, animal, season, food, or time of day.\n\t- Picture people you care about, look at a photograph.\n\t- Think of things you are looking forward to in the next week-perhaps time with a friend, going to a movie.\n\n### Steps\n\n1. Choose one Grounding technique (saying, action, or thought) at a time and give it your full attention.\n2. When grounding, focus on the present, not the past or future.\n3. Keep your eyes open, scan the room, and turn the light on to stay in touch with the present.\n4. Practice your Grounding technique for at least ten minutes every day.\n5. Try different Grounding Strategies to see which ones work for you\n\n### Practice\n\nPractice Grounding once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Grounding in harder situations when you really need it. The more you practice, the more Grounding becomes second nature and you can use it anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Mindfulness Autopilot",
        "text": "Autopilot is a type of mind state when your attention is only partially aware of the present moment and what is around you. When you are on Auto-Pilot you are preoccupied and just \u201Cgoing through the motions.\u201D You are acting on habit and without intention.\n\nSome examples of being on Auto- Pilot include stressing, worrying about what will happen, daydreaming, or being lost in your own world. In a car, we can sometimes drive for miles \u201Con Auto-Pilot,\u201D without really being aware of what we are doing. In the same way, we may not be really \u201Cpresent\u201D moment-by-moment, for much of our lives: We can often be \u201Cmiles away\u201D without knowing it.\n\nWhen you are on Auto-Pilot emotionally, it is easy to \u201Cslip\u201D into moods, become lost in your emotions, and wrapped up in your thoughts. You are more likely to have your \u201Cbuttons pressed\u201D and unhelpful thinking may lead to worsening mood. When you no longer know what you are feeling or why, it is easy to become disconnected.\n\nWhen you become mindful of your actions and get off Auto-Pilot you become empowered to make positive change. You respond to situations with choice in new and beneficial ways.\n\n### Steps\n\n1. **Choose one activity each day that you often do in Auto-Pilot.**\n\tExamples include; brushing your teeth, eating a meal, showering, preparing for bed, or walking in the park. Stick with one activity for a week or longer rather than changing the activity regularly.\n2. **When the time comes for that activity, do it in a fully present frame of mind**.\n\tPay attention to the activity itself and what is happening in the present moment. This includes what is occurring around you (touch, sight, sound, taste, smell) and what is occurring within you (physical and emotional sensations).\n\t- If you start to think of other things, then note it for a second and return to the sensations of the activity.\n\t- If the activity is likely to be longer than a few minutes, then practice the first two minutes mindfully.\n\n### Practice\n\nYou can get off auto-pilot by practicing over and over again every day to change the focus of your attention; be present and aware; and be open and accepting. The more you practice getting off auto-pilot, the easier it will be to act with intention all the time.\n\n_Reference: [stillmind.com.au](http:\/\/www.stillmind.com.au\/mindfulnessworksheets.htm), [mindfulnessmuse.com](http:\/\/www.mindfulnessmuse.com), Crane, R. (2009). *Mindfulness-based cognitive therapy.* New York, NY: Routledge., and [awakenedsource.com](http:\/\/www.awakenedsource.com)_\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Mindfulness Five Senses",
        "text": "The Five Senses is a mindfulness meditation exercise that helps to calm your mind and focus on your environment instead of your thoughts. The Five Senses will help you to become aware of your surroundings and notice things that never stood out before. This technique can be repeated any time and any place you need a quick relaxation or stress break.\n\n### Steps\n\n- [x] Sit or lie in a comfortable position.\n- [x] Take a few deep breaths to help you relax.\n- [x] Notice your surroundings and what is occurring.\n\n1. What can you **see** around you?\n\t> Is it a clear day? What is on the walls? How is the light reflecting? What objects are in the room?\n2. What can you **feel**?\n\t> How does your clothing texture feel? Is the table surface smooth? Do you feel the pressure of your feet?\n3. What can you **hear**?\n\t> Do you hear an appliance humming? The wind outside your home? Leaves rustling? Music playing in the distance?\n4. What **smells** are in the air?\n\t> Inhale slowly. Exhale. On the next inhale, what do you smell? What do you smell immediately? What scents do you perceive in the distance? Do this for about 10 breaths.\n5. What can you **taste**?\n\t> Begin to focus on your mouth and the sensations you taste in your mouth. Do you taste the remnants of a recent beverage or meal? Was it sweet or salty?\n\nBreathe in and out two more times being aware of all the wonderful things around you. When you are ready, take a final deep breath and get back to your day with renewed energy and a relaxed state of mind.\n\n### Practice\n\nPractice Five Senses once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Five Senses in harder situations when you really need it. The more you practice, the more using Five Senses becomes second nature and you can use it anytime, with ease.\n\n_References: [clayton.edu](http:\/\/www.clayton.edu), [therapistaid.com](http:\/\/www.therapistaid.com)_\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Mindfulness",
        "text": "Mindfulness is a skill that is used to increase your awareness and ability to focus on the present or being fully attentive to one thing at a time.\n\nWhen you are being mindful, you concentrate your mind, give all your attention, and let go of distracting thoughts.\n\nMindfulness is a skill that can be learned and is helpful to boost mood, increase happiness, and strengthen control of your mind. Mindfulness strategies include:\n\n- While eating, focus your attention on the taste, smell, and texture of your food as you are chewing.\n- When you are in a group, or a conversation, focus your attention on the very moment you are in with the other person.\n- Do a chore and pay attention to every detail. Observe your movements and sensations.\n- Set a timer for three minutes and simply begin to write down every thought that goes through your mind on a piece of paper.\n- Breathe mindfully by counting your breaths, focusing on the physical act of breathing, and being aware of any thoughts that arise while breathing.\n- Sit very still and notice one thing that you can see, hear, taste, and smell.\n- Make a gratitude list or journal.\n\n### Steps\n\n1. Choose one Mindfulness strategy.\n2. Practice your Mindfulness strategy at least once a day or as often as possible.\n3. Try different Mindfulness strategies to see which one works best.\n\n### Practice\n\nPractice Mindfulness strategies once a day or more at times when you are feeling well and not distressed. This will help you make Mindfulness strategies a part of your everyday routine. Start with 2-3 minutes of practice and build up to a longer duration. The more you practice, the more Mindfulness strategies become second nature and you can use it anytime, with ease.\n\n_Reference: The Miracle of Mindfulness: A Manual of Meditation by Thich Nhat Hanh,1976, Boston, Beacon Press 1976; McKay, M., Woo *The dialectical behavior therapy skills workbook* 2007._\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Optimisim",
        "text": "Optimism means to be hopeful, positive, and confident about the future. Optimism is believing that you have control over your own happiness and being certain that good things will come your way. Feeling optimistic can help you improve your mood, enhance your health, and increase your confidence. Optimism also improves relationships as others prefer optimistic people to negative ones.\n\nDeveloping an optimistic attitude takes time. Some strategies include:\n- Try to approach challenges believing you will succeed.\n- View a tough situation as a challenge you can figure out how to handle.\n- Remember that facing challenges is a normal part of life and growth.\n- Surround yourself with optimistic people who have a positive attitude and believe in you.\n- Dedicate energy to changing negative thinking to more positive thinking. This can take lots of practice!\n- Focus your energies on the things in life you can control rather than dwelling on the things you can\u2019t.\n- Use humor and laughter to lift yourself up.\n\n### Steps\n\n1. Choose one strategy to improve your optimism.\n2. Practice your chosen Optimism Strategy at least once a day or as often as possible.\n3. Try different strategies to improve your optimism to see which one works best.\n\n### Practice\n\nPractice optimism strategies once a day or more at times when you are feeling well and not distressed. This will help you make Optimism Strategies a part of your everyday routine. The more you practice, the more Optimism Strategies becomes second nature and you can use it anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Positive Self Talk",
        "text": "Self-talk are thoughts you have with yourself inside your head. Self-talk is your minds response to a situation or conversation. Self-talk can be positive or negative and can make you feel better or worse.\n\nPositive Self-Talk is talk that happens to yourself in an uplifting, calm, and reasonable way. Positive Self-Talk moves you toward emotional control.\n\nNegative Self-Talk is talk that happens to yourself in a way that is not helpful or motivating. Negative Self-Talk moves you towards unpleasant emotions and actions.\n\nOne way to change your behavior and your feelings about a situation is to change your self-talk. With practice, you can train your mind to use Positive Self-Talk.\n\n### Steps\n\nChoose at least one Positive Self-Talk phrase that will improve your life such as:\n- Bottom line \u2013 I\u2019m in control.\n- Easy does it \u2013 Getting upset or mad won\u2019t help.\n- Stay calm- Take a deep breath and relax.\n- Stay cool \u2013 don\u2019t make any judgments.\n- I can manage this.\n- No matter what other people say, I know I\u2019m a good person\n\n1. Choose a Positive Self-Talk phrase and practice saying it as many times as possible each day.\n2. Hang your Positive Self-Talk phrase in your room, store an image of it on your phone, or keep a copy in your wallet.\n3. Try different Positive Self-Talk phrases to see which one works best for you.\n\n### Practice\n\nTo change how you feel, change what you think or do! You can replace negative Self- Talk with Positive Self-Talk. Practice Positive Self-Talk once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Positive Self-Talk in harder situations when you really need it. The more you practice, the more Positive Self-Talk becomes second nature and you can use it anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Positive Thoughts",
        "text": "Positive Thoughts are ideas in your mind that make you feel good. Positive Thoughts are good for your brain and mood. Positive Thoughts improve happiness, success, peace, and health. With practice, you can train your mind to think Positive Thoughts.\n\n### Steps\n\nChoose at least one Positive Thought that will improve your life such as:\n- **Cool Thought:**\n\t> \u201CIt\u2019s just not worth it. Take a few deep breaths and chill out.\u201D\n- **Escape Route:**\n\t> \u201CIt\u2019s OK to take a time out. Move away, get your act together, and then come back and deal with it.\u201D\n- **Self Confidence Thought:**\n\t> \u201CI can handle this \u2013 I have what it takes to get through this.\u201D\n- **New Explanation:**\n\t> \u201CI can cut them some slack \u2013 I would hope they\u2019d do the same for me if I was having a difficult time.\u201D\n- **See the Whole Picture:**\n\t> \u201CMaybe I need to look at the other side. There might be more to this.\u201D\n- **People Doing their Best:**\n\t> \u201CThey\u2019re just doing what they know how to do.\u201D\n\n1. Choose at least one Positive Thought.\n2. Practice saying your Positive Thought as many times as possible each day.\n3. Hang your Positive Thought in your room, store an image of it on your phone, or keep a copy in your wallet.\n4. Try different Positive Thoughts to see which ones work for you.\n\n### Practice\n\nPractice Positive Thoughts once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Positive Thoughts in harder situations when you really need it. The more you practice, the more using Positive Thoughts becomes second nature and you can use it anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Progressive Muscle Relaxation",
        "text": "Progressive Muscle Relaxation is a deep relaxation technique used relieve tension and stress from the body. In Progressive Muscle Relaxation exercises, you tense up one muscle group at a time and then relax them. Progressive Muscle Relaxation can help to manage symptoms related to anxiety, depression, sleep problems, headaches, chronic pain, and more. \n\n### Steps\n\n1. **Relax**\n\t- Find a quiet place with as few distractions as possible.\n\t- Sit or lie in a comfortable position.\n\t- Allow yourself to settle in and become calm.\n\t- Take a few slow, deep breaths.\n\t- Start to concentrate on your body.\n2. **Apply tension to each muscle group, one group at a time.**\n\t- When you are ready, begin with tensing one section of your body. The easiest way to start is with your head and move down your body to your feet or the reverse, from your feet to your head.\n\t- Feel the tension build and hold for five seconds.\n3. **Release the tension.**\n\t- Take a deep breath and as you exhale let the tension go.\n\t- Relax the muscles and keep it relaxed for approximately 10 seconds.\n\t- It may be helpful to say something like \u201CRelax\u201D as you relax the muscle.\n\t- Pay close attention to how the muscles relax as the tension flows away.\n4. **Move to different muscles in your body- first tensing the muscles\n\tand then relaxing the muscles.**\n\n### Practice\n\nPractice Progressive Muscle Relaxation daily or more often for 10 to 20 minutes per day. You can use a recorded guide or practice a relaxation sequence by memory. Through repetition and practice you will learn to recognize a tensed muscle and a completely relaxed muscle. With this knowledge, you can physically relax your muscles at the first signs of tension and with physical relaxation comes mental calmness.\n\n_Reference: [Williams D & Carey M. (2003). \u201CYou Really Need to Relax: Effective Methods.\u201D](http:\/\/www.med.umich.edu\/painresearch\/patients\/relaxation.pdf)_\n\n_Centre for Clinical Interventions (www.cci.health.wa.gov.au)_\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Self Soothing Strategies",
        "text": "Self-Soothing strategies are skills used to relax your body and your mind. Self-Soothing strategies are positive ways to cope with every day stress. Self-Soothing strategies can also help you feel at ease when you experience intense emotions. \n\nExamples of Self-Soothing strategies include:\n\n| Something to Hear | Something to Taste | Something to Smell | Something to Touch | Something to See | \n|-|-|-|-|-|\n| Play an instrument | Drink tea, hot chocolate, or a smoothie | Bake cookies or bread | Change into comfortable clothing | Art | \n| Listen to soothing music | Eat your favorite foods | Flowers | Pet your dog or cat | Go to a museum | \n| Listen to sounds of nature | Chew sugar free gum | Fresh smells of nature | Take a bath or shower | Go window shopping |\n| Sing to yourself | Suck on peppermint or sour candy | Lavender or Lemon oil | Stress ball | Happy pictures | \n| | | Perfume | Use lotion | Look at nature | \n| | | | | Read a good book | \n| | | | | Star gaze | \n| | | | | Watch a funny movie | \n| | | | | Watch a sunset or sunrise | \n\n### Steps\n\n1. Choose at least one Self-Soothing strategy.\n2. Practice your Self-Soothing strategy at least once a day or as often as possible.\n3. Try different Self-Soothing strategies to see which one works best.\n\n### Practice\n\nPractice Self-Soothing strategies once a day or more at times when you are feeling well and not distressed. This will help make Self-Soothing strategies a part of your everyday routine. The more you practice, the more Self Soothing Strategies become second nature and you can use them anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Symptom Tracker",
        "text": "A Symptom Tracker is a tool you can use to understand your physical and\/or mental health symptoms. Using a Symptom Tracker can help you explore your patterns of symptoms and the impact of symptoms on your life. Tracking symptoms helps you to be accurate when you recall what happened and how you felt. It will empower you to feel confident and communicate symptoms with your supports to find solutions that work for you. Exploring your symptoms is a helpful step when looking over your tracker. \n\nExample of exploring questions include:\n- What did you experience (i.e. thoughts, behaviors, emotions, or physical feelings)?\n- What caused symptoms (i.e. events, conflicts, or stressors)?\n- What warning signs did you notice?\n- How did symptoms impact your life?\n- What was helpful\/not helpful to manage your symptoms?\n- What progress did you make this week with managing symptoms?\n\n### Steps\n\n1. Create your Symptom Tracker by choosing a symptom tracking method (i.e. phone, tablet, computer, journal, notebook, calendar, planner).\n2. Record your symptoms as frequently as possible (at least once a day).\n3. Use exploring questions to get to know your symptoms. Think about what you experienced, how often symptoms occurred, and under what circumstances.\n4. Share your results with your supports to brainstorm helpful coping strategies.\n\n### Practice\n\nTrack your symptoms every day. This will help you to know when they are happening so you can take the steps to manage them. Over time, recognizing your symptoms and managing your symptoms will become second nature.\n\n| Date | Time | Symptom | Level of Distress (1=low to 5=high) |\n|-|-|-|-|\n| | | | |\n| | | | |\n| | | | |\n| | | | |\n| | | | |\n| | | | |\n| | | | |\n\n| Notes |\n|-|\n| |\n| |\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "Thought Stopping",
        "text": "Thought Stopping is a technique used to change unhelpful thoughts, negative beliefs, or rumination. Thought Stopping techniques help you to get you back on track when your thoughts become overwhelming. Thought Stopping can be a phrase you say, an action you do, or something you visualize in your mind. Examples include:\n\nThought Stopping Saying\n- Say \u201Cslow down\u201D when a thought occurs.\n- Say \u201Cstop!\u201D either aloud or to yourself.\n- Say \u201Cdelete negative thought\u201D and replace it.\n- Take a slow deep breath and say a peaceful thought out loud or in your mind.\n\nThought Stopping Action\n- Snap a rubber band around your wrist.\n- List unwanted thoughts on paper. Then list replacement thoughts that are realistic and positive.\n- Sing your favorite song.\n\nThought Stopping Visual\n- Imagine that you see a red Stop Sign.\n- Create a bubble around your thought. Press the bubble, burst it, and watch it float away.\n- Think of a more pleasant thought.\n\n### Steps\n\n1. Choose at least one Thought Stopping technique\n2. Practice your Thought Stop ping Technique for at least ten minutes every day\n3. Try different Thought Stopping techniques to see which ones work for you.\n\n### Practice\n\nPractice Thought Stopping once a day or more at times when you are feeling well and not distressed. This will help you learn the skill better so you will be able to use Thought Stopping in harder situations when you really need it.\n\nNegative thinking can become a habit that is hard to break. It may take weeks or months of practicing the Thought Stopping technique for it to work. Don\u2019t give up! You can be successful.\n\n_Reference: [American Psychological Association](http:\/\/www.apa.org)_\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      },
      {
        "title": "3-Step Control",
        "text": "3-Step Control is skill to use if you experience auditory hallucinations (hearing voices) that cause anxiety, distress, or distraction. 3-Step Control helps you to focus your attention, feel better, and improve how you interact in the world. Completely eliminating voices altogether might not be possible but lowering the volume so you can focus on your day is achievable!\n\n### Steps\n\nWhen practicing 3-Step Control, use your senses and movement to pay full attention to the task. Your mind\u2019s thinking and your body should become fully engaged. This reduces distractions such as voices and improves control of your thinking.\n\n- Rate how much your voices distract you on a scale of 1 (low) to 5 (high)\n- For 2 to 10 minutes or until you run out of objects, use your body and mind to attend to one object at a time.\n\t1. Look at an object\n\t2. Point to the object\n\t3. Name the object out loud\n- Rate your voices on the 1-5 scale again. Do you notice any positive change?\n\n**Practice**\n\nUnderstanding when and how you experience voices can help you to gain knowledge about how best to manage them. Practice 3-Step Control at least once a day, when you are **not** experiencing hearing voices or during a time that voices are **not** problematic. The goal is to get into the habit of using the skill so you can become more comfortable with it. The more you practice, the more 3-Step Control becomes second nature and you can use it anytime, with ease.\n\n_Category: EBP \u2013 CBT - Skills Training \/ Relapse Reduction | \u00A9 Vinfen 2020_",
        "image": ""
      }
    ],
    "schedule": [],
    "category": ["learn"]
  }
]
