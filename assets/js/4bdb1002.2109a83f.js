"use strict";(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[6586],{603905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(667294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,_=u["".concat(c,".").concat(d)]||u[d]||m[d]||l;return r?a.createElement(_,o(o({ref:t},p),{},{components:r})):a.createElement(_,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},169767:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var a=r(487462),n=r(263366),l=(r(667294),r(603905)),o=["components"],i={},c="Game level scores",s={unversionedId:"data_science/cortex/features/primary/game_level_scores",id:"data_science/cortex/features/primary/game_level_scores",title:"Game level scores",description:"computed from raw features: cortex.raw.balloonrisk, cortex.raw.catsanddogs, cortex.raw.jewelsa,",source:"@site/docs/09-data_science/06-cortex/05-features/01-primary/03-game_level_scores.md",sourceDirName:"09-data_science/06-cortex/05-features/01-primary",slug:"/data_science/cortex/features/primary/game_level_scores",permalink:"/data_science/cortex/features/primary/game_level_scores",editUrl:"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/09-data_science/06-cortex/05-features/01-primary/03-game_level_scores.md",tags:[],version:"current",lastUpdatedBy:"dcurrey88",lastUpdatedAt:1649772275,formattedLastUpdatedAt:"4/12/2022",sidebarPosition:3,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Accelerometer Jerk",permalink:"/data_science/cortex/features/primary/acc_jerk"},next:{title:"Screen Active",permalink:"/data_science/cortex/features/primary/screen_active"}},p=[{value:"Description",id:"description",children:[],level:4},{value:"Optional or required kwargs",id:"optional-or-required-kwargs",children:[],level:4},{value:"Data",id:"data",children:[],level:4},{value:"Example",id:"example",children:[],level:4}],m={toc:p};function u(e){var t=e.components,r=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"game-level-scores"},"Game level scores"),(0,l.kt)("p",null,"computed from raw features: ",(0,l.kt)("inlineCode",{parentName:"p"},"cortex.raw.balloon_risk"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cortex.raw.cats_and_dogs"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cortex.raw.jewels_a"),",\n",(0,l.kt)("inlineCode",{parentName:"p"},"cortex.raw.jewels_b"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cortex.raw.pop_the_bubbles"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cortex.raw.spatial_span")),(0,l.kt)("h4",{id:"description"},"Description"),(0,l.kt)("p",null,"Computes cognitive game leve-wise scores from raw data."),(0,l.kt)("h4",{id:"optional-or-required-kwargs"},"Optional or required kwargs"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"start"),": (int, units: ms) the start time."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"end"),": (int, units: ms) the end time."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name_of_game"),': (str) the name of the game to score. Options include: "balloon_risk", "cats_and_dogs", "jewels_a", "jewels_b", "pop_the_bubbles", and "spatial_span". No data will be returned if the game is not one of the options above.')),(0,l.kt)("h4",{id:"data"},"Data"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"start"),": (int, units: ms) the start time of a given survey entry."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"end"),": (int, units: ms) the end time of a given survey entry."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"level"),": (str) the game level.")),(0,l.kt)("p",null,"The other return values depend on which game is being scored."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"avg_go_perc_correct")," (game: pop_the_bubbles): (float) the percent of go trials that were correct."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"avg_NO_go_perc_correct")," (game: pop_the_bubbles): (float) the average percent of no-go trials that were correct."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"avg_pumps")," (game: balloon_risk): (float) the average number of balloon pumps."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"avg_tap_time")," (game: cats_and_dogs, jewels_a, jewels_b, spatial_span): (float) the average tap time."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"avg_perc_correct")," (game: cats_and_dogs, jewels_a, jewels_b, spatial_span): (float) the average percent of correct taps."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"jewels_collected")," (game: jewels_a, jewels_b): (int) the number of jewels collected in the level.\nPlease note that currently there is information missing from the API, so the pop_the_bubbles scores will not be accurate.")),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-markdown"},'cortex.primary.game_level_scores.game_level_scores(id="U1234567890", start=0, end=cortex.now(), name_of_game="jewels_b")\n')),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-markdown"},"{\n  'timestamp': 0,\n  'duration': 1627067480000,\n  'data': [\n           {'start': 1639759199227, 'end': 1639777579969, 'level': 1, 'avg_tap_time': 1233.5, 'jewels_collected': 25, 'perc_correct': 0.995},\n           {'start': 1639759199227, 'end': 1639777579969, 'level': 1, 'avg_tap_time': 1009.2, 'jewels_collected': 25, 'perc_correct': 1.0},\n           .\n           .\n           .\n           {'start': 1639426388269, 'end': 1639426610663, 'level': 3, 'avg_tap_time': 981.24, 'jewels_collected': 21, 'perc_correct': 1.0},\n          ],\n  'has_raw_data': 1,\n}\n")))}u.isMDXComponent=!0}}]);