(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[8041],{603905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},605795:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var r=n(722122),a=n(419756),i=(n(667294),n(603905)),o={},c={unversionedId:"develop/build_new_activities",id:"develop/build_new_activities",isDocsHomePage:!1,title:"Building New Activities",description:"Because the LAMP Platform is built around around a simple native core and a flexible WebView UI, any HTML/CSS/JavaScript code that works in a browser can work in the app.",source:"@site/docs/07-develop/05-build_new_activities.md",sourceDirName:"07-develop",slug:"/develop/build_new_activities",permalink:"/develop/build_new_activities",editUrl:"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/07-develop/05-build_new_activities.md",version:"current",lastUpdatedBy:"Aditya Vaidyam",lastUpdatedAt:1621951701,formattedLastUpdatedAt:"5/25/2021",sidebarPosition:5,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Continuous Monitoring & Intervention Delivery",permalink:"/develop/intervention_delivery"},next:{title:"How Interventions Work",permalink:"/develop/how_interventions_work"}},s=[],l={toc:s};function p(e){var t=e.components,o=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Because the ",(0,i.kt)("strong",{parentName:"p"},"LAMP Platform")," is built around around a simple native core and a flexible WebView UI, any HTML/CSS/JavaScript code that works in a browser can work in the app."),(0,i.kt)("p",null,"Learning modules, surveys, cognitive tests, and interventions all use the same API and using a framework such as React makes it simple, for example, to create new interventions as needed with patient/participant feedback."),(0,i.kt)("p",null,"Any Javascript-based code can be added the LAMP Platform using the ActivitySpec API, as long as it uses ",(0,i.kt)("inlineCode",{parentName:"p"},"window.postMessage()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"window.addEventListener()")," API to receive the Activity settings and submit the ActivityEvent once complete. "),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Figure 1:")," Approximately ~40 lines of JavaScript + React code, shown on the left, produces a na\xefve implementation of the Jewels game, shown on the right."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(343050).Z})),(0,i.kt)("p",null,"If you'd like to try creating your own, but don't have a ReactJS development environment, ",(0,i.kt)("strong",{parentName:"p"},"consider using ",(0,i.kt)("a",{parentName:"strong",href:"https://codesandbox.io/"},"CodeSandbox")),", a free service."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Figure 2:")," Using a variant of Blockly, developed by Google and used by the MIT Scratch language, we can drag-and-drop blocks to generate JavaScript code behind the scenes."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(293357).Z})))}p.isMDXComponent=!0},343050:function(e,t,n){"use strict";t.Z=n.p+"assets/images/Screen_Shot_2019-04-16_at_12.12.16_PM-289c1d28979a3911df0a34438f507d69.png"},293357:function(e,t,n){"use strict";t.Z=n.p+"assets/images/Screen_Shot_2019-04-16_at_12.41.17_PM-6d13df41f3dd46a4e92bf8b68b0c9026.png"}}]);