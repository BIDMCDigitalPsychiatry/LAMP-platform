"use strict";(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[424],{603905:function(t,e,i){i.d(e,{Zo:function(){return c},kt:function(){return y}});var n=i(667294);function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function l(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){a(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function o(t,e){if(null==t)return{};var i,n,a=function(t,e){if(null==t)return{};var i,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||(a[i]=t[i]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(a[i]=t[i])}return a}var s=n.createContext({}),p=function(t){var e=n.useContext(s),i=e;return t&&(i="function"==typeof t?t(e):l(l({},e),t)),i},c=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var i=t.components,a=t.mdxType,r=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),u=p(i),y=a,m=u["".concat(s,".").concat(y)]||u[y]||d[y]||r;return i?n.createElement(m,l(l({ref:e},c),{},{components:i})):n.createElement(m,l({ref:e},c))}));function y(t,e){var i=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=i.length,l=new Array(r);l[0]=u;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:a,l[1]=o;for(var p=2;p<r;p++)l[p]=i[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},582740:function(t,e,i){i.r(e),i.d(e,{contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var n=i(487462),a=i(263366),r=(i(667294),i(603905)),l=["components"],o={},s="Query ActivityEvents for a Participant.",p={type:"api",id:"query-activity-events-for-a-participant",unversionedId:"query-activity-events-for-a-participant",title:"Query ActivityEvents for a Participant.",description:"",slug:"/query-activity-events-for-a-participant",frontMatter:{},api:{operationId:"ActivityEvent.list",description:"List ActivityEvents produced by a Participant. The deprecated name for this operation is `ActivityEvent.all_by_participant`.",tags:["ActivityEvent"],parameters:[{name:"id",in:"path",required:!0,schema:{type:"string"}},{name:"origin",in:"query",schema:{type:"string"}},{name:"from",in:"query",schema:{type:"integer",description:"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.",format:"int64"}},{name:"to",in:"query",schema:{type:"integer",description:"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.",format:"int64"}},{name:"limit",in:"query",schema:{type:"integer",format:"int64",default:1e3,description:"The maximum number of events to return in the query. Positive values like +1000 return latest events first, while negative values like -1000 return earliest events first.",example:"-10"}}],responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{data:{type:"array",items:{type:"object",description:"An event generated by the participant interacting with an `Activity`.",properties:{timestamp:{type:"integer",format:"int64",description:"The UNIX Epoch date-time representation of when this event was recorded: number of milliseconds since 1/1/1970 12:00 AM.",example:1605022e6},duration:{type:"integer",format:"int64",description:"The duration this event lasted before recording ended.",example:84123},activity:{type:"string",description:"The activity that produced this activity event.",example:"2wp97csc3g57ptznhhkg"},static_data:{type:"object",description:"The summary information for the activity event as determined by the activity that created this activity event.",example:{assistance_required:!0,mode:"expert"}},temporal_slices:{description:"The specific interaction details of the activity event.",type:"array",items:{type:"object",description:"A specific sub-detail of a `ActivityEvent` that contains specific  interaction information that comprises the parent `ActivityEvent`.",properties:{item:{nullable:!0,description:"The item that was interacted with; for example, in a Jewels game, the  corresponding alphabet, or in a survey, the question index.",example:"What day is it today?"},value:{nullable:!0,description:"The value of the item that was interacted with; in most games,  this field is  `null`, but in a survey, this field is the question  choice index.",example:3},type:{nullable:!0,description:"The type of interaction that for this detail; for example, in  a Jewels game,  `none` if the tapped jewel was  incorrect, or `correct` if it was correct, or in  a  survey, this field will be `null`.",example:"correct"},duration:{nullable:!0,description:"The time difference from the previous detail or the  start of the parent result.",example:84280},level:{nullable:!0,description:"The level of activity for this detail; for example, in  games with multiple  levels, this field might be `2` or  `4`, but for surveys and other games this field  will be `null`.",example:8}}}}},required:["timestamp","activity","duration","static_data","temporal_slices"]}}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{error:{type:"string",example:"400.bad-request"}}}}}}},security:[{Authorization:[]}],"x-code-samples":[{lang:"js",label:"JavaScript",source:'import LAMP from \'lamp-core\'\nawait LAMP.connect({ serverAddress: "api.lamp.digital", accessKey: "email@address.com", secretKey: "password" })\n// function-specific sample code here\n'},{lang:"python",label:"Python",source:'import LAMP\nLAMP.connect("api.lamp.digital", "email@address.com", "password")\n# function-specific sample code here\n'},{lang:"go",label:"R Script",source:'library(LAMP)\nLAMP.connect("api.lamp.digital", "email@address.com", "password")\n# function-specific sample code here\n'}],method:"get",path:"/participant/{id}/activity_event",servers:[{url:"https://{server_url}",description:"LAMP Platform API Server",variables:{server_url:{default:"api.lamp.digital",description:"A specific API server instance (HTTPS required)."}}}],securitySchemes:{Authorization:{type:"http",scheme:"basic"}},info:{title:"LAMP Platform",version:"1.0.0",description:"See docs.lamp.digital for more.",contact:{url:"https://digitalpsych.org/",email:"team@digitalpsych.org",name:"Division of Digital Psychiatry at the Beth Israel Deaconess Medical Center."}},postman:{name:"Query ActivityEvents for a Participant.",description:{content:"List ActivityEvents produced by a Participant. The deprecated name for this operation is `ActivityEvent.all_by_participant`.",type:"text/plain"},url:{path:["participant",":id","activity_event"],host:["{{baseUrl}}"],query:[{description:{content:"",type:"text/plain"},key:"origin",value:"<string>"},{description:{content:"",type:"text/plain"},key:"from",value:"<long>"},{description:{content:"",type:"text/plain"},key:"to",value:"<long>"},{description:{content:"",type:"text/plain"},key:"limit",value:"1000"}],variable:[{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"id"}]},method:"GET",auth:{type:"basic",basic:[{type:"any",value:"<Basic Auth Username>",key:"username"},{type:"any",value:"<Basic Auth Password>",key:"password"}]}}},source:"@site/LAMP-protocol/openapi.yml",sourceDirName:".",permalink:"/api/query-activity-events-for-a-participant",previous:{title:"Create an ActivityEvent for a Participant.",permalink:"/api/create-an-activity-event-for-a-participant"},next:{title:"Create a SensorEvent for a Participant.",permalink:"/api/create-a-sensor-event-for-a-participant"}},c=[],d={toc:c};function u(t){var e=t.components,i=(0,a.Z)(t,l);return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"query-activityevents-for-a-participant"},"Query ActivityEvents for a Participant."),(0,r.kt)("p",null,"List ActivityEvents produced by a Participant. The deprecated name for this operation is ",(0,r.kt)("inlineCode",{parentName:"p"},"ActivityEvent.all_by_participant"),"."),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"origin"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"from"),(0,r.kt)("span",{style:{opacity:"0.6"}}," int64"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"to"),(0,r.kt)("span",{style:{opacity:"0.6"}}," int64"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"limit"),(0,r.kt)("span",{style:{opacity:"0.6"}}," int64"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Success"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"data"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"timestamp"),(0,r.kt)("span",{style:{opacity:"0.6"}}," int64"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The UNIX Epoch date-time representation of when this event was recorded: number of milliseconds since 1/1/1970 12:00 AM.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"duration"),(0,r.kt)("span",{style:{opacity:"0.6"}}," int64"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The duration this event lasted before recording ended.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"activity"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The activity that produced this activity event.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"static_data"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The summary information for the activity event as determined by the activity that created this activity event.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"temporal_slices"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The specific interaction details of the activity event.")),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"item"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The item that was interacted with; for example, in a Jewels game, the  corresponding alphabet, or in a survey, the question index.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"value"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The value of the item that was interacted with; in most games,  this field is  ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),", but in a survey, this field is the question  choice index.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"type"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The type of interaction that for this detail; for example, in  a Jewels game,  ",(0,r.kt)("inlineCode",{parentName:"p"},"none")," if the tapped jewel was  incorrect, or ",(0,r.kt)("inlineCode",{parentName:"p"},"correct")," if it was correct, or in  a  survey, this field will be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),".")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"duration"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The time difference from the previous detail or the  start of the parent result.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"level"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The level of activity for this detail; for example, in  games with multiple  levels, this field might be ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," or  ",(0,r.kt)("inlineCode",{parentName:"p"},"4"),", but for surveys and other games this field  will be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."))))))))))))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"default")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Error"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"error"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string")))))))))))}u.isMDXComponent=!0}}]);