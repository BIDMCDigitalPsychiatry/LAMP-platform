"use strict";(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[1824],{3905:function(e,t,i){i.d(t,{Zo:function(){return p},kt:function(){return y}});var a=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(i),y=n,m=u["".concat(c,".").concat(y)]||u[y]||d[y]||r;return i?a.createElement(m,o(o({ref:t},p),{},{components:i})):a.createElement(m,o({ref:t},p))}));function y(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<r;s++)o[s]=i[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},3939:function(e,t,i){i.r(t),i.d(t,{contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var a=i(87462),n=i(63366),r=(i(67294),i(3905)),o=["components"],l={},c="Create an ActivityEvent for a Participant.",s={type:"api",id:"create-an-activity-event-for-a-participant",unversionedId:"create-an-activity-event-for-a-participant",title:"Create an ActivityEvent for a Participant.",description:"",slug:"/create-an-activity-event-for-a-participant",frontMatter:{},api:{operationId:"ActivityEvent.create",description:"Create an ActivityEvent for a Participant.",tags:["ActivityEvent"],parameters:[{name:"id",in:"path",required:!0,schema:{type:"string"}}],requestBody:{required:!0,content:{"application/json":{schema:{oneOf:[{type:"object",description:"An event generated by the participant interacting with an `Activity`.",properties:{timestamp:{type:"integer",format:"int64",description:"The UNIX Epoch date-time representation of when this event was recorded: number of milliseconds since 1/1/1970 12:00 AM.",example:1605022e6},duration:{type:"integer",format:"int64",description:"The duration this event lasted before recording ended.",example:84123},activity:{type:"string",description:"The activity that produced this activity event.",example:"2wp97csc3g57ptznhhkg"},static_data:{type:"object",description:"The summary information for the activity event as determined by the activity that created this activity event.",example:{assistance_required:!0,mode:"expert"}},temporal_slices:{description:"The specific interaction details of the activity event.",type:"array",items:{type:"object",description:"A specific sub-detail of a `ActivityEvent` that contains specific  interaction information that comprises the parent `ActivityEvent`.",properties:{item:{nullable:!0,description:"The item that was interacted with; for example, in a Jewels game, the  corresponding alphabet, or in a survey, the question index.",example:"What day is it today?"},value:{nullable:!0,description:"The value of the item that was interacted with; in most games,  this field is  `null`, but in a survey, this field is the question  choice index.",example:3},type:{nullable:!0,description:"The type of interaction that for this detail; for example, in  a Jewels game,  `none` if the tapped jewel was  incorrect, or `correct` if it was correct, or in  a  survey, this field will be `null`.",example:"correct"},duration:{nullable:!0,description:"The time difference from the previous detail or the  start of the parent result.",example:84280},level:{nullable:!0,description:"The level of activity for this detail; for example, in  games with multiple  levels, this field might be `2` or  `4`, but for surveys and other games this field  will be `null`.",example:8}}}}},required:["timestamp","activity","duration","static_data","temporal_slices"]},{type:"array",items:{type:"object",description:"An event generated by the participant interacting with an `Activity`.",properties:{timestamp:{type:"integer",format:"int64",description:"The UNIX Epoch date-time representation of when this event was recorded: number of milliseconds since 1/1/1970 12:00 AM.",example:1605022e6},duration:{type:"integer",format:"int64",description:"The duration this event lasted before recording ended.",example:84123},activity:{type:"string",description:"The activity that produced this activity event.",example:"2wp97csc3g57ptznhhkg"},static_data:{type:"object",description:"The summary information for the activity event as determined by the activity that created this activity event.",example:{assistance_required:!0,mode:"expert"}},temporal_slices:{description:"The specific interaction details of the activity event.",type:"array",items:{type:"object",description:"A specific sub-detail of a `ActivityEvent` that contains specific  interaction information that comprises the parent `ActivityEvent`.",properties:{item:{nullable:!0,description:"The item that was interacted with; for example, in a Jewels game, the  corresponding alphabet, or in a survey, the question index.",example:"What day is it today?"},value:{nullable:!0,description:"The value of the item that was interacted with; in most games,  this field is  `null`, but in a survey, this field is the question  choice index.",example:3},type:{nullable:!0,description:"The type of interaction that for this detail; for example, in  a Jewels game,  `none` if the tapped jewel was  incorrect, or `correct` if it was correct, or in  a  survey, this field will be `null`.",example:"correct"},duration:{nullable:!0,description:"The time difference from the previous detail or the  start of the parent result.",example:84280},level:{nullable:!0,description:"The level of activity for this detail; for example, in  games with multiple  levels, this field might be `2` or  `4`, but for surveys and other games this field  will be `null`.",example:8}}}}},required:["timestamp","activity","duration","static_data","temporal_slices"]}}]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{data:{type:"object"}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{error:{type:"string",example:"400.bad-request"}}}}}}},security:[{Authorization:[]}],"x-code-samples":[{lang:"js",label:"JavaScript",source:'import LAMP from \'lamp-core\'\nawait LAMP.connect({ serverAddress: "api.lamp.digital", accessKey: "email@address.com", secretKey: "password" })\n// function-specific sample code here\n'},{lang:"python",label:"Python",source:'import LAMP\nLAMP.connect("api.lamp.digital", "email@address.com", "password")\n# function-specific sample code here\n'},{lang:"go",label:"R Script",source:'library(LAMP)\nLAMP.connect("api.lamp.digital", "email@address.com", "password")\n# function-specific sample code here\n'}],method:"post",path:"/participant/{id}/activity_event",servers:[{url:"https://{server_url}",description:"LAMP Platform API Server",variables:{server_url:{default:"api.lamp.digital",description:"A specific API server instance (HTTPS required)."}}}],securitySchemes:{Authorization:{type:"http",scheme:"basic"}},info:{title:"LAMP Platform",version:"1.0.0",description:"See docs.lamp.digital for more.",contact:{url:"https://digitalpsych.org/",email:"team@digitalpsych.org",name:"Division of Digital Psychiatry at the Beth Israel Deaconess Medical Center."}},postman:{name:"Create an ActivityEvent for a Participant.",description:{content:"Create an ActivityEvent for a Participant.",type:"text/plain"},url:{path:["participant",":id","activity_event"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"id"}]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "timestamp": "<long>",\n    "activity": "<string>",\n    "duration": "<long>",\n    "static_data": "<object>",\n    "temporal_slices": [\n        {\n            "item": "schema type not provided",\n            "value": "schema type not provided",\n            "type": "schema type not provided",\n            "duration": "schema type not provided",\n            "level": "schema type not provided"\n        },\n        {\n            "item": "schema type not provided",\n            "value": "schema type not provided",\n            "type": "schema type not provided",\n            "duration": "schema type not provided",\n            "level": "schema type not provided"\n        }\n    ]\n}'},auth:{type:"basic",basic:[{type:"any",value:"<Basic Auth Username>",key:"username"},{type:"any",value:"<Basic Auth Password>",key:"password"}]}}},source:"@site/LAMP-protocol/openapi.yml",sourceDirName:".",permalink:"/api/create-an-activity-event-for-a-participant",previous:{title:"List all Participants in a Study shared by a Sensor.",permalink:"/api/list-all-participants-in-a-study-shared-by-a-sensor"},next:{title:"Query ActivityEvents for a Participant.",permalink:"/api/query-activity-events-for-a-participant"}},p=[],d={toc:p};function u(e){var t=e.components,i=(0,n.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-an-activityevent-for-a-participant"},"Create an ActivityEvent for a Participant."),(0,r.kt)("p",null,"Create an ActivityEvent for a Participant."),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("span",{style:{opacity:"0.6"}}," undefined"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Success"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"data"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"default")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Error"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"error"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string")))))))))))}u.isMDXComponent=!0}}]);