"use strict";(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[6877],{603905:function(t,e,i){i.d(e,{Zo:function(){return c},kt:function(){return u}});var n=i(667294);function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function l(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){a(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function o(t,e){if(null==t)return{};var i,n,a=function(t,e){if(null==t)return{};var i,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||(a[i]=t[i]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(a[i]=t[i])}return a}var s=n.createContext({}),p=function(t){var e=n.useContext(s),i=e;return t&&(i="function"==typeof t?t(e):l(l({},e),t)),i},c=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(t,e){var i=t.components,a=t.mdxType,r=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),y=p(i),u=a,m=y["".concat(s,".").concat(u)]||y[u]||d[u]||r;return i?n.createElement(m,l(l({ref:e},c),{},{components:i})):n.createElement(m,l({ref:e},c))}));function u(t,e){var i=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=i.length,l=new Array(r);l[0]=y;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:a,l[1]=o;for(var p=2;p<r;p++)l[p]=i[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}y.displayName="MDXCreateElement"},804260:function(t,e,i){i.r(e),i.d(e,{contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var n=i(487462),a=i(263366),r=(i(667294),i(603905)),l=["components"],o={},s="List all Participants in a Study shared by an Activity.",p={type:"api",id:"list-all-participants-in-a-study-shared-by-an-activity",unversionedId:"list-all-participants-in-a-study-shared-by-an-activity",title:"List all Participants in a Study shared by an Activity.",description:"",slug:"/list-all-participants-in-a-study-shared-by-an-activity",frontMatter:{},api:{operationId:"Participant.list_shared1",description:"[DEPRECATED: USE `Participant.list` INSTEAD!] List all Participants available to an Activity.",tags:["Activity"],parameters:[{name:"id",in:"path",required:!0,schema:{type:"string"}}],responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{data:{type:"array",items:{type:"object",description:"An activity that may be performed by a participant in a study.",properties:{id:{type:"string",readOnly:!0,description:"The self-referencing identifier to this object.",example:"2wp97csc3g57ptznhhkg"},spec:{type:"string",description:"The specification, parameters, and type of the activity.",example:"lamp.survey"},name:{type:"string",description:"The name of the activity.",example:"Mood Survey"},settings:{type:"object",additionalProperties:!0,description:"The configuration settings for the activity.",example:{questions:[{text:"What day is it today?",description:"Please answer based on when you received the notification for this survey.",type:"slider",options:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]}]}},schedule:{type:"array",description:"The notification schedule for the activity.",items:{anyOf:[{type:"object",description:"An advanced scheduling item.",properties:{start:{type:"integer",format:"int64",description:"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM."},interval:{type:"array",items:{},description:""},repeat_count:{type:"integer",format:"int64",description:""},end:{type:"integer",format:"int64",description:"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM."}}},{type:"object",description:"A simplified scheduling item.",properties:{start_date:{type:"string",format:"date-time",description:"The date after which this schedule should begin firing.",example:"2020-10-28T20:50:12.000Z"},time:{type:"string",format:"date-time",description:"For certain `repeat_interval` types, specify the hour and minute of the day to fire.",example:"2020-10-28T20:50:12.000Z"},repeat_interval:{type:"string",enum:["hourly","every3h","every6h","every12h","daily","biweekly","triweekly","weekly","bimonthly","monthly","custom","none"],description:"If set to `hourly`, `every3h`, `every6h`, or `every12h`, only the `time` parameter's minute field is used. If set to anything other than `custom` or `none`, the `time` parameter's hour and minute field are both used. The `biweekly` option refers to Tue/Thurs and `triweekly` option refers to Mon/Wed/Fri. The `bimonthly` option refers to twice a month. The `custom` option refers to only using the `custom_times` array, and the `none` option means to only trigger the schedule once.",example:"every6h"},custom_times:{type:"array",items:{type:"string",format:"date-time",description:"A specific date-time to fire at.",example:"2020-10-28T20:50:12.000Z"},nullable:!0,description:"For `custom` schedules, specify a list of all specific date-times to fire at."}}}]},example:[{start_date:"2020-10-24T14:17:00.000Z",time:"2020-10-23T16:17:33.291Z",repeat_interval:"every3h",custom_time:["2020-10-23T14:18:20.973Z","2020-10-23T14:18:20.973Z","2020-10-23T14:18:20.973Z","2020-10-23T14:18:20.973Z"]}]}},required:["id","spec","name","settings","schedule"]}}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{error:{type:"string",example:"400.bad-request"}}}}}}},security:[{Authorization:[]}],"x-code-samples":[{lang:"js",label:"JavaScript",source:'import LAMP from \'lamp-core\'\nawait LAMP.connect({ serverAddress: "api.lamp.digital", accessKey: "email@address.com", secretKey: "password" })\n// function-specific sample code here\n'},{lang:"python",label:"Python",source:'import LAMP\nLAMP.connect("api.lamp.digital", "email@address.com", "password")\n# function-specific sample code here\n'},{lang:"go",label:"R Script",source:'library(LAMP)\nLAMP.connect("api.lamp.digital", "email@address.com", "password")\n# function-specific sample code here\n'}],method:"get",path:"/activity/{id}/participant",servers:[{url:"https://{server_url}",description:"LAMP Platform API Server",variables:{server_url:{default:"api.lamp.digital",description:"A specific API server instance (HTTPS required)."}}}],securitySchemes:{Authorization:{type:"http",scheme:"basic"}},info:{title:"LAMP Platform",version:"1.0.0",description:"See docs.lamp.digital for more.",contact:{url:"https://digitalpsych.org/",email:"team@digitalpsych.org",name:"Division of Digital Psychiatry at the Beth Israel Deaconess Medical Center."}},postman:{name:"List all Participants in a Study shared by an Activity.",description:{content:"[DEPRECATED: USE `Participant.list` INSTEAD!] List all Participants available to an Activity.",type:"text/plain"},url:{path:["activity",":id","participant"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"id"}]},method:"GET",auth:{type:"basic",basic:[{type:"any",value:"<Basic Auth Username>",key:"username"},{type:"any",value:"<Basic Auth Password>",key:"password"}]}}},source:"@site/LAMP-protocol/openapi.yml",sourceDirName:".",permalink:"/api/list-all-participants-in-a-study-shared-by-an-activity",previous:{title:"List all Sensors in a Study shared by a Participant.",permalink:"/api/list-all-sensors-in-a-study-shared-by-a-participant"},next:{title:"List all Participants in a Study shared by a Sensor.",permalink:"/api/list-all-participants-in-a-study-shared-by-a-sensor"}},c=[],d={toc:c};function y(t){var e=t.components,i=(0,a.Z)(t,l);return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"list-all-participants-in-a-study-shared-by-an-activity"},"List all Participants in a Study shared by an Activity."),(0,r.kt)("p",null,"[DEPRECATED: USE ",(0,r.kt)("inlineCode",{parentName:"p"},"Participant.list")," INSTEAD!]"," List all Participants available to an Activity."),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Success"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"data"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The self-referencing identifier to this object.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"spec"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The specification, parameters, and type of the activity.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"name"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The name of the activity.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"settings"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The configuration settings for the activity.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"schedule"),(0,r.kt)("span",{style:{opacity:"0.6"}}," undefined[]"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The notification schedule for the activity."))))))))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"default")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Error"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"error"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string")))))))))))}y.isMDXComponent=!0}}]);