"use strict";(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[5739],{603905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var r=n(667294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),p=i,h=m["".concat(l,".").concat(p)]||m[p]||d[p]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},751479:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(487462),i=n(263366),a=(n(667294),n(603905)),o=["components"],s={},l="Significant Locations",u={unversionedId:"data_science/Cortex/Features/Primary/sig_locs",id:"data_science/Cortex/Features/Primary/sig_locs",isDocsHomePage:!1,title:"Significant Locations",description:"computed from raw feature: cortex.raw.gps",source:"@site/docs/09-data_science/06-Cortex/03-Features/01-Primary/04-sig_locs.md",sourceDirName:"09-data_science/06-Cortex/03-Features/01-Primary",slug:"/data_science/Cortex/Features/Primary/sig_locs",permalink:"/data_science/Cortex/Features/Primary/sig_locs",editUrl:"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/09-data_science/06-Cortex/03-Features/01-Primary/04-sig_locs.md",tags:[],version:"current",lastUpdatedBy:"dcurrey88",lastUpdatedAt:1646856660,formattedLastUpdatedAt:"3/9/2022",sidebarPosition:4,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Screen Active",permalink:"/data_science/Cortex/Features/Primary/screen_active"},next:{title:"Sleep Periods",permalink:"/data_science/Cortex/Features/Primary/sleep_periods"}},c=[{value:"Description",id:"description",children:[],level:4},{value:"Optional or required kwargs",id:"optional-or-required-kwargs",children:[],level:4},{value:"Data",id:"data",children:[],level:4},{value:"Example 0 - using method=&#39;mode&#39; with min_cluster_size set to 0.01",id:"example-0---using-methodmode-with-min_cluster_size-set-to-001",children:[],level:4},{value:"Example 1 - using method=&#39;mode&#39; with max_clusters set to 2",id:"example-1---using-methodmode-with-max_clusters-set-to-2",children:[],level:4}],d={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"significant-locations"},"Significant Locations"),(0,a.kt)("p",null,"computed from raw feature: ",(0,a.kt)("inlineCode",{parentName:"p"},"cortex.raw.gps")),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,'Significant locations computes the locations where a participant spends most of their time, ie locations that are "significant." These are determined either using k-means clustering or using a more naive method by rounding the GPS latitude and longitude to 3 decimal places and taking the most common locations. In addition to locations, the percent of the time spent at each significant location is computed.'),(0,a.kt)("h4",{id:"optional-or-required-kwargs"},"Optional or required kwargs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start"),": (int, units: ms) the start time."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"end"),": (int, units: ms) the end time."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"method"),': (str, defaut: "mode", options: "mode", "k_means") method to use for finding significant locations. If a string other than "mode" or "k_means" is passed then method will be set to "mode".')),(0,a.kt)("p",null,'For method == "k-means":'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"k_max"),": (int, units: ms, defualt: 10) the maximum KMeans clusters to test."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"eps"),': (float, units: None, default: 1e-5) used in sklearn.cluster.DBSCAN, "the maximum distance between two samples for one to be considered as in the neighborhood of the other." (source: ',(0,a.kt)("a",{parentName:"li",href:"https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html"},"https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html"),").")),(0,a.kt)("p",null,'For method == "mode":'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"max_clusters"),": (int, units: None, default: -1) the maximum number of clusters to use. If set to -1, then min_cluster_size will be used to determine the number of clusters returned (see below). If there are less clusters than max_clusters then all clusters will be returned. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"min_cluster_size"),": (float, units: None, default: 0.01) the minimum size of possible clusters as a percentage of the total number of points. (ex: if the total number of points is 100 and min_cluster_size is set to 0.2 then any clusters with more than 20 points will be used)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"max_dist"),": (float, units: m, default: 300) if clusters are less than max_dist away from one another, they will be merged into one cluster. To not merge clusters, set max_dist to 0. ")),(0,a.kt)("h4",{id:"data"},"Data"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start"),": (int, units: ms) the start time."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"end"),": (int, units: ms) the end time."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"latitude"),": (float, units: degrees) the latitude of the center of the cluster."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"longitude"),": (float, units: degrees) the longitude of the center of the cluster."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rank"),": (int, units: None) the index of the cluster. Note that clusters are ordered by prevelance (starting with 0 being home). "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"radius"),": (float, units: km) the mean distance of cluster points from the cluster center."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"proportion"),": (float, units: None) the proportion of the points in this cluster. Note that this proportion only includes points in clusters."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"duration"),": (int, units: ms) the time spent in each cluster location.")),(0,a.kt)("h4",{id:"example-0---using-methodmode-with-min_cluster_size-set-to-001"},"Example 0 - using method='mode' with min_cluster_size set to 0.01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},'cortex.primary.significant_locations.significant_locations(id="U1234567890",\n                                                           start=1607072400000,\n                                                           end=cortex.now(),\n                                                           max_clusters=-1,\n                                                           min_cluster_size=0.01)\n')),(0,a.kt)("p",null," Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"{\n 'timestamp': 1607072400000,\n 'duration': 5616000000,\n 'data': [\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.338,\n             'longitude': -71.084,\n             'rank': 0,\n             'radius': 24.29582585958463,\n             'proportion': 0.7428286613808599,\n             'duration': 1278792817\n           },\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.076,\n             'longitude': -71.255,\n             'rank': 1,\n             'radius': 21.562489967625048,\n             'proportion': 0.2313546220415891,\n             'duration': 587856388\n          },\n          {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.337,\n             'longitude': -71.091,\n             'rank': 2,\n             'radius': 28.948886421408247,\n             'proportion': 0.025816716577551066,\n             'duration': 39207942\n          }\n      ],\n 'has_raw_data': 1,\n}\n")),(0,a.kt)("h4",{id:"example-1---using-methodmode-with-max_clusters-set-to-2"},"Example 1 - using method='mode' with max_clusters set to 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},'cortex.primary.significant_locations.significant_locations(id="U1234567890",\n                                                           start=1607072400000,\n                                                           end=cortex.now(),\n                                                           max_clusters=2,\n                                                           min_cluster_size=0.01)\n')),(0,a.kt)("p",null," Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"{\n 'timestamp': 1607072400000,\n 'duration': 5616000000,\n 'data': [\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.338,\n             'longitude': -71.084,\n             'rank': 0,\n             'radius': 24.29582585958463,\n             'proportion': 0.7652037614040124,\n             'duration': 1218884313\n           },\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.076,\n             'longitude': -71.255,\n             'rank': 1,\n             'radius': 21.562489967625048,\n             'proportion': 0.23479623859598767,\n             'duration': 566147289\n          }\n      ],\n 'has_raw_data': 1,\n}\n")))}m.isMDXComponent=!0}}]);