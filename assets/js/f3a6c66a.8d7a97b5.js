"use strict";(self.webpackChunklamp_platform=self.webpackChunklamp_platform||[]).push([[2347],{98741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"data_science/cortex/features/primary/sig_locs","title":"Significant Locations","description":"computed from raw feature: cortex.raw.gps","source":"@site/docs/09-data_science/06-cortex/05-features/01-primary/05-sig_locs.md","sourceDirName":"09-data_science/06-cortex/05-features/01-primary","slug":"/data_science/cortex/features/primary/sig_locs","permalink":"/data_science/cortex/features/primary/sig_locs","draft":false,"unlisted":false,"editUrl":"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/09-data_science/06-cortex/05-features/01-primary/05-sig_locs.md","tags":[],"version":"current","lastUpdatedBy":"Juan","lastUpdatedAt":1737052535000,"sidebarPosition":5,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Screen Active","permalink":"/data_science/cortex/features/primary/screen_active"},"next":{"title":"Survey scores","permalink":"/data_science/cortex/features/primary/survey_scores"}}');var i=n(74848),r=n(28453);const o={},a="Significant Locations",l={},d=[{value:"Description",id:"description",level:4},{value:"Optional or required kwargs",id:"optional-or-required-kwargs",level:4},{value:"Data",id:"data",level:4},{value:"Example 0 - using method=&#39;mode&#39; with min_cluster_size set to 0.01",id:"example-0---using-methodmode-with-min_cluster_size-set-to-001",level:4},{value:"Example 1 - using method=&#39;mode&#39; with max_clusters set to 2",id:"example-1---using-methodmode-with-max_clusters-set-to-2",level:4}];function c(e){const t={a:"a",code:"code",h1:"h1",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"significant-locations",children:"Significant Locations"})}),"\n",(0,i.jsxs)(t.p,{children:["computed from raw feature: ",(0,i.jsx)(t.code,{children:"cortex.raw.gps"})]}),"\n",(0,i.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:'Significant locations computes the locations where a participant spends most of their time, ie locations that are "significant." These are determined either using k-means clustering or using a more naive method by rounding the GPS latitude and longitude to 3 decimal places and taking the most common locations. In addition to locations, the percent of the time spent at each significant location is computed.'}),"\n",(0,i.jsx)(t.h4,{id:"optional-or-required-kwargs",children:"Optional or required kwargs"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"start"}),": (int, units: ms) the start time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"end"}),": (int, units: ms) the end time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"method"}),': (str, defaut: "mode", options: "mode", "k_means") method to use for finding significant locations. If a string other than "mode" or "k_means" is passed then method will be set to "mode".']}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'For method == "k-means":'}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"k_max"}),": (int, units: ms, defualt: 10) the maximum KMeans clusters to test."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"eps"}),': (float, units: None, default: 1e-5) used in sklearn.cluster.DBSCAN, "the maximum distance between two samples for one to be considered as in the neighborhood of the other." (source: ',(0,i.jsx)(t.a,{href:"https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html",children:"https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html"}),")."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'For method == "mode":'}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"max_clusters"}),": (int, units: None, default: -1) the maximum number of clusters to use. If set to -1, then min_cluster_size will be used to determine the number of clusters returned (see below). If there are less clusters than max_clusters then all clusters will be returned."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"min_cluster_size"}),": (float, units: None, default: 0.01) the minimum size of possible clusters as a percentage of the total number of points. (ex: if the total number of points is 100 and min_cluster_size is set to 0.2 then any clusters with more than 20 points will be used)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"max_dist"}),": (float, units: m, default: 300) if clusters are less than max_dist away from one another, they will be merged into one cluster. To not merge clusters, set max_dist to 0."]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"data",children:"Data"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"start"}),": (int, units: ms) the start time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"end"}),": (int, units: ms) the end time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"latitude"}),": (float, units: degrees) the latitude of the center of the cluster."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"longitude"}),": (float, units: degrees) the longitude of the center of the cluster."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"rank"}),": (int, units: None) the index of the cluster. Note that clusters are ordered by prevelance (starting with 0 being home)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"radius"}),": (float, units: km) the mean distance of cluster points from the cluster center."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"proportion"}),": (float, units: None) the proportion of the points in this cluster. Note that this proportion only includes points in clusters."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"duration"}),": (int, units: ms) the time spent in each cluster location."]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"example-0---using-methodmode-with-min_cluster_size-set-to-001",children:"Example 0 - using method='mode' with min_cluster_size set to 0.01"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-markdown",children:'cortex.primary.significant_locations.significant_locations(id="U1234567890",\n                                                           start=1607072400000,\n                                                           end=cortex.now(),\n                                                           max_clusters=-1,\n                                                           min_cluster_size=0.01)\n'})}),"\n",(0,i.jsx)(t.p,{children:"Output:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-markdown",children:"{\n 'timestamp': 1607072400000,\n 'duration': 5616000000,\n 'data': [\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.338,\n             'longitude': -71.084,\n             'rank': 0,\n             'radius': 24.29582585958463,\n             'proportion': 0.7428286613808599,\n             'duration': 1278792817\n           },\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.076,\n             'longitude': -71.255,\n             'rank': 1,\n             'radius': 21.562489967625048,\n             'proportion': 0.2313546220415891,\n             'duration': 587856388\n          },\n          {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.337,\n             'longitude': -71.091,\n             'rank': 2,\n             'radius': 28.948886421408247,\n             'proportion': 0.025816716577551066,\n             'duration': 39207942\n          }\n      ],\n 'has_raw_data': 1,\n}\n"})}),"\n",(0,i.jsx)(t.h4,{id:"example-1---using-methodmode-with-max_clusters-set-to-2",children:"Example 1 - using method='mode' with max_clusters set to 2"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-markdown",children:'cortex.primary.significant_locations.significant_locations(id="U1234567890",\n                                                           start=1607072400000,\n                                                           end=cortex.now(),\n                                                           max_clusters=2,\n                                                           min_cluster_size=0.01)\n'})}),"\n",(0,i.jsx)(t.p,{children:"Output:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-markdown",children:"{\n 'timestamp': 1607072400000,\n 'duration': 5616000000,\n 'data': [\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.338,\n             'longitude': -71.084,\n             'rank': 0,\n             'radius': 24.29582585958463,\n             'proportion': 0.7652037614040124,\n             'duration': 1218884313\n           },\n           {\n             'start': 1607072400000,\n             'end': 1612688400000,\n             'latitude': 42.076,\n             'longitude': -71.255,\n             'rank': 1,\n             'radius': 21.562489967625048,\n             'proportion': 0.23479623859598767,\n             'duration': 566147289\n          }\n      ],\n 'has_raw_data': 1,\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);