"use strict";(self.webpackChunkLAMP_documentation=self.webpackChunkLAMP_documentation||[]).push([[2787],{603905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(667294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),m=n,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?a.createElement(f,o(o({ref:t},u),{},{components:r})):a.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},133542:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var a=r(487462),n=r(263366),i=(r(667294),r(603905)),o=["components"],c={},s="Primary Feature Overview",l={unversionedId:"data_science/Cortex/Features/Primary/Readme",id:"data_science/Cortex/Features/Primary/Readme",title:"Primary Feature Overview",description:"Primary features in cortex are derived from raw data and typically contain multiple bouts / periods.",source:"@site/docs/09-data_science/06-Cortex/04-Features/01-Primary/01-Readme.md",sourceDirName:"09-data_science/06-Cortex/04-Features/01-Primary",slug:"/data_science/Cortex/Features/Primary/Readme",permalink:"/data_science/Cortex/Features/Primary/Readme",editUrl:"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/09-data_science/06-Cortex/04-Features/01-Primary/01-Readme.md",tags:[],version:"current",lastUpdatedBy:"dcurrey88",lastUpdatedAt:1649692962,formattedLastUpdatedAt:"4/11/2022",sidebarPosition:1,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Advanced Usage",permalink:"/data_science/Cortex/advanced"},next:{title:"Accelerometer Jerk",permalink:"/data_science/Cortex/Features/Primary/acc_jerk"}},u=[{value:"&#39;has_raw_data&#39;",id:"has_raw_data",children:[],level:3}],d={toc:u};function p(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"primary-feature-overview"},"Primary Feature Overview"),(0,i.kt)("p",null,"Primary features in cortex are derived from raw data and typically contain multiple bouts / periods. "),(0,i.kt)("h3",{id:"has_raw_data"},"'has_raw_data'"),(0,i.kt)("p",null,"All primary features will return a ",(0,i.kt)("inlineCode",{parentName:"p"},"has_raw_data")," along with the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," which is whether any raw datapoints exist. Some features can return the same result if there is / is not raw data, so this flag reduces ambiguity. "),(0,i.kt)("p",null,"For example, consider screen_active (the bouts where the screen is on):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markdown"},'cortex.primary.screen_active.screen_active(id="U1234567890", start=1607072400000, end=cortex.now())\n')),(0,i.kt)("p",null,"If there are screen on and off events, the data may look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markdown"},"{\n  'timestamp': 1607072400000,\n  'duration': 5616000000,\n  'data': [\n           {'start': 1607094896733, 'end': 1607100072241, 'duration': 5175508},\n           {'start': 1607100076065, 'end': 1607100088981, 'duration': 12916},\n                 .\n                 .\n                 .\n           {'start': 1607103351139, 'end': 1607108478253, 'duration': 5127114}\n          ],\n  'has_raw_data': 1,\n}\n")),(0,i.kt)("p",null,"If there is no device_state data, ",(0,i.kt)("inlineCode",{parentName:"p"},"screen_active")," will return the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markdown"},"{\n  'timestamp': 1607072400000,\n  'duration': 5616000000,\n  'data': [\n          ],\n  'has_raw_data': 0,\n}\n")),(0,i.kt)("p",null,'However, if there is device_state data, but only "screen_off" events (so there are no bouts where the screen is "on") the following will be returned:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markdown"},"{\n  'timestamp': 1607072400000,\n  'duration': 5616000000,\n  'data': [\n          ],\n  'has_raw_data': 1,\n}\n")))}p.isMDXComponent=!0}}]);