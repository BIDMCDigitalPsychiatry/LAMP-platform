"use strict";(self.webpackChunklamp_platform=self.webpackChunklamp_platform||[]).push([[2094],{28453:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>l});var s=t(96540);const a={},n=s.createContext(a);function c(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(n.Provider,{value:r},e.children)}},90275:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"data_science/cortex/features/primary/game_level_scores","title":"Game level scores","description":"computed from raw features: cortex.raw.balloonrisk, cortex.raw.catsanddogs, cortex.raw.jewelsa,","source":"@site/docs/09-data_science/06-cortex/05-features/01-primary/03-game_level_scores.md","sourceDirName":"09-data_science/06-cortex/05-features/01-primary","slug":"/data_science/cortex/features/primary/game_level_scores","permalink":"/data_science/cortex/features/primary/game_level_scores","draft":false,"unlisted":false,"editUrl":"https://github.com/BIDMCDigitalPsychiatry/LAMP-platform/edit/master/docs/09-data_science/06-cortex/05-features/01-primary/03-game_level_scores.md","tags":[],"version":"current","lastUpdatedBy":"Juan","lastUpdatedAt":1739478043000,"sidebarPosition":3,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Accelerometer Jerk","permalink":"/data_science/cortex/features/primary/acc_jerk"},"next":{"title":"Screen Active","permalink":"/data_science/cortex/features/primary/screen_active"}}');var a=t(74848),n=t(28453);const c={},l="Game level scores",o={},i=[{value:"Description",id:"description",level:4},{value:"Optional or required kwargs",id:"optional-or-required-kwargs",level:4},{value:"Data",id:"data",level:4},{value:"Example",id:"example",level:4}];function d(e){const r={code:"code",h1:"h1",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"game-level-scores",children:"Game level scores"})}),"\n",(0,a.jsxs)(r.p,{children:["computed from raw features: ",(0,a.jsx)(r.code,{children:"cortex.raw.balloon_risk"}),", ",(0,a.jsx)(r.code,{children:"cortex.raw.cats_and_dogs"}),", ",(0,a.jsx)(r.code,{children:"cortex.raw.jewels_a"}),",\n",(0,a.jsx)(r.code,{children:"cortex.raw.jewels_b"}),", ",(0,a.jsx)(r.code,{children:"cortex.raw.pop_the_bubbles"}),", ",(0,a.jsx)(r.code,{children:"cortex.raw.spatial_span"})]}),"\n",(0,a.jsx)(r.h4,{id:"description",children:"Description"}),"\n",(0,a.jsx)(r.p,{children:"Computes cognitive game leve-wise scores from raw data."}),"\n",(0,a.jsx)(r.h4,{id:"optional-or-required-kwargs",children:"Optional or required kwargs"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"start"}),": (int, units: ms) the start time."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"end"}),": (int, units: ms) the end time."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"name_of_game"}),': (str) the name of the game to score. Options include: "balloon_risk", "cats_and_dogs", "jewels_a", "jewels_b", "pop_the_bubbles", and "spatial_span". No data will be returned if the game is not one of the options above.']}),"\n"]}),"\n",(0,a.jsx)(r.h4,{id:"data",children:"Data"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"start"}),": (int, units: ms) the start time of a given survey entry."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"end"}),": (int, units: ms) the end time of a given survey entry."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"level"}),": (str) the game level."]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"The other return values depend on which game is being scored."}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"avg_go_perc_correct"})," (game: pop_the_bubbles): (float) the percent of go trials that were correct."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"avg_NO_go_perc_correct"})," (game: pop_the_bubbles): (float) the average percent of no-go trials that were correct."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"avg_pumps"})," (game: balloon_risk): (float) the average number of balloon pumps."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"avg_tap_time"})," (game: cats_and_dogs, jewels_a, jewels_b, spatial_span): (float) the average tap time."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"avg_perc_correct"})," (game: cats_and_dogs, jewels_a, jewels_b, spatial_span): (float) the average percent of correct taps."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"jewels_collected"})," (game: jewels_a, jewels_b): (int) the number of jewels collected in the level.\nPlease note that currently there is information missing from the API, so the pop_the_bubbles scores will not be accurate."]}),"\n"]}),"\n",(0,a.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-markdown",children:'cortex.primary.game_level_scores.game_level_scores(id="U1234567890", start=0, end=cortex.now(), name_of_game="jewels_b")\n'})}),"\n",(0,a.jsx)(r.p,{children:"Output:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-markdown",children:"{\n  'timestamp': 0,\n  'duration': 1627067480000,\n  'data': [\n           {'start': 1639759199227, 'end': 1639777579969, 'level': 1, 'avg_tap_time': 1233.5, 'jewels_collected': 25, 'perc_correct': 0.995},\n           {'start': 1639759199227, 'end': 1639777579969, 'level': 1, 'avg_tap_time': 1009.2, 'jewels_collected': 25, 'perc_correct': 1.0},\n           .\n           .\n           .\n           {'start': 1639426388269, 'end': 1639426610663, 'level': 3, 'avg_tap_time': 981.24, 'jewels_collected': 21, 'perc_correct': 1.0},\n          ],\n  'has_raw_data': 1,\n}\n"})})]})}function p(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);